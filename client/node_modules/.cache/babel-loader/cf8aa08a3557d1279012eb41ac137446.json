{"ast":null,"code":"var _jsxFileName = \"/home/brate/Desktop/pixelart_creator/pixelartur/client/src/components/PixelartFunc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useWindowDimensions from './WindowDimHook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PixelartFunc() {\n  _s();\n\n  const [draw, setDraw] = useState(false);\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const [colorPicker, setColorPicker] = useState(\"#ffffff\"); // Similar to componentDidMount and componentDidUpdate:\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    let container = document.querySelector('.container');\n    let sizeEl = document.querySelector(\".size\");\n    let size = 32;\n    const color = document.querySelector('.color');\n    let resetBtn = document.querySelector('#btn');\n    let eraserBtn = document.querySelector('#eraserBtn');\n\n    function populate(size) {\n      container.style.setProperty('--size', size);\n      /*  container.style.setProperty(\"--gridsizeH\",\"400px\")\n       container.style.setProperty(\"--gridsizeW\",\"400px\") */\n\n      for (let i = 0; i < size * size; i++) {\n        let div = document.createElement('div');\n        div.classList.add('pixel');\n        let colorPicker = getComputedStyle(div);\n        div.addEventListener('mouseover', function () {\n          div.style.setProperty(\"--main-bg-color\", color.value);\n          if (!this.state.draw) return;\n          div.style.backgroundColor = color.value;\n          div.style.setProperty(\"--main-bg-color\", color.value);\n          div.style.setProperty(\"--pixel-bg-color\", color.value);\n        });\n        div.addEventListener('mouseover', function () {\n          if (getComputedStyle(div).getPropertyValue('--pixel-bg-color') != getComputedStyle(div).getPropertyValue('--main-bg-color')) return;\n          div.style.backgroundColor = colorPicker;\n        });\n        div.addEventListener('mousedown', function () {\n          div.style.backgroundColor = color.value;\n          div.style.setProperty(\"--main-bg-color\", color.value);\n        });\n        /*   document.querySelector('.container').setProperty(\"--gridsizeH\",this.state.height)\n          document.querySelector('.container').setProperty(\"--gridsizeW\",this.state.width) */\n\n        /*    this.setState({width: window.innerWidth, height: window.innerHeight}, () => {\n             console.log(\"hi\")\n           }) */\n\n        container.appendChild(div);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"width: \", width, \" ~ height: \", height]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this)\n  /*         <div className=\"Appi\">\n  \n              <div className=\"navbar\"\n                  style={{\n                      backgroundColor: \"#101522\"\n                  }}\n              >\n  \n                  <button id=\"btn\" class=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-4 px-10 border border-blue-500 hover:border-transparent rounded\"><p style={{ fontWeight: 'bold', fontSize: '200%' }}>Reset</p></button>\n                  <div style={{\n                      width: '30px'\n                  }}></div>\n                  <button id=\"eraserBtn\" class=\"bg-transparent hover:bg-red-500 text-blue-700 font-semibold hover:text-white py-4 px-10 border border-blue-500 hover:border-transparent rounded\"><p style={{ fontWeight: 'bold', fontSize: '200%' }}>Eraser</p></button>\n  \n                  <input type=\"color\" valueDefault=\"#00eeff\" id=\"color\" class=\"color\"></input>\n              </div>\n  \n  \n              <p>{this.state.width < 800 ? (\n  \n  \n                  <div style={{ height: myWidth, width: myWidth }} className=\"container\" id=\"container\"></div>\n  \n  PixelartFunc\n              ) : <div style={{ height: \"800px\", width: \"800px\" }} className=\"container\" id=\"container\"></div>}</p>\n  \n  \n  \n              <button onClick={this.appendScreenshot}>Load Canvas</button>\n  \n  \n  \n  \n          </div> */\n  ;\n}\n\n_s(PixelartFunc, \"IFENGIpSZIwyKtABTpTd8y/R8SE=\", false, function () {\n  return [useWindowDimensions];\n});\n\n_c = PixelartFunc;\nexport default PixelartFunc;\n\nvar _c;\n\n$RefreshReg$(_c, \"PixelartFunc\");","map":{"version":3,"names":["React","useState","useEffect","useWindowDimensions","PixelartFunc","draw","setDraw","height","width","colorPicker","setColorPicker","container","document","querySelector","sizeEl","size","color","resetBtn","eraserBtn","populate","style","setProperty","i","div","createElement","classList","add","getComputedStyle","addEventListener","value","state","backgroundColor","getPropertyValue","appendChild"],"sources":["/home/brate/Desktop/pixelart_creator/pixelartur/client/src/components/PixelartFunc.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useWindowDimensions from './WindowDimHook';\nfunction PixelartFunc() {\n    const [draw, setDraw] = useState(false);\n\n    const { height, width } = useWindowDimensions();\n\n    const [colorPicker, setColorPicker]  = useState(\"#ffffff\")\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => {\n        // Update the document title using the browser API\n        let container = document.querySelector('.container')\n        let sizeEl = document.querySelector(\".size\");\n        let size = 32\n        const color = document.querySelector('.color')\n        let resetBtn = document.querySelector('#btn')\n        let eraserBtn = document.querySelector('#eraserBtn')\n\n        function populate(size) {\n\n       \n            container.style.setProperty('--size', size)\n    \n    \n    \n           /*  container.style.setProperty(\"--gridsizeH\",\"400px\")\n            container.style.setProperty(\"--gridsizeW\",\"400px\") */\n    \n            for (let i = 0; i < size * size; i++) {\n              let div = document.createElement('div')\n              div.classList.add('pixel')\n    \n              let colorPicker = getComputedStyle(div)\n    \n              div.addEventListener('mouseover', function () {\n                div.style.setProperty(\"--main-bg-color\", color.value);\n    \n    \n                if (!this.state.draw) return\n    \n                div.style.backgroundColor = color.value\n                div.style.setProperty(\"--main-bg-color\", color.value);\n                div.style.setProperty(\"--pixel-bg-color\", color.value);\n    \n    \n    \n              })\n    \n              div.addEventListener('mouseover', function () {\n    \n                if (getComputedStyle(div)\n                  .getPropertyValue('--pixel-bg-color') != getComputedStyle(div)\n                    .getPropertyValue('--main-bg-color')) return\n                div.style.backgroundColor = colorPicker;\n              })\n    \n              div.addEventListener('mousedown', function () {\n                div.style.backgroundColor = color.value\n                div.style.setProperty(\"--main-bg-color\", color.value);\n    \n              })\n    \n    \n            /*   document.querySelector('.container').setProperty(\"--gridsizeH\",this.state.height)\n              document.querySelector('.container').setProperty(\"--gridsizeW\",this.state.width) */\n    \n           /*    this.setState({width: window.innerWidth, height: window.innerHeight}, () => {\n                console.log(\"hi\")\n              }) */\n             \n              container.appendChild(div)\n            }\n          }\n    });\n\n    return (\n        <div>\n        width: {width} ~ height: {height}\n      </div>\n/*         <div className=\"Appi\">\n\n            <div className=\"navbar\"\n                style={{\n                    backgroundColor: \"#101522\"\n                }}\n            >\n\n                <button id=\"btn\" class=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-4 px-10 border border-blue-500 hover:border-transparent rounded\"><p style={{ fontWeight: 'bold', fontSize: '200%' }}>Reset</p></button>\n                <div style={{\n                    width: '30px'\n                }}></div>\n                <button id=\"eraserBtn\" class=\"bg-transparent hover:bg-red-500 text-blue-700 font-semibold hover:text-white py-4 px-10 border border-blue-500 hover:border-transparent rounded\"><p style={{ fontWeight: 'bold', fontSize: '200%' }}>Eraser</p></button>\n\n                <input type=\"color\" valueDefault=\"#00eeff\" id=\"color\" class=\"color\"></input>\n            </div>\n\n\n            <p>{this.state.width < 800 ? (\n\n\n                <div style={{ height: myWidth, width: myWidth }} className=\"container\" id=\"container\"></div>\n\nPixelartFunc\n            ) : <div style={{ height: \"800px\", width: \"800px\" }} className=\"container\" id=\"container\"></div>}</p>\n\n\n\n            <button onClick={this.appendScreenshot}>Load Canvas</button>\n\n\n\n\n        </div> */\n    );\n}\n\nexport default PixelartFunc;\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}