{"ast":null,"code":"var _jsxFileName = \"/home/bruh/Desktop/solidity_projects/crypto_pixel_art_creator/client/src/App.jsx\";\n\n/* import { EthProvider } from \"./contexts/EthContext\";\nimport Intro from \"./components/Intro/\";\nimport Setup from \"./components/Setup\";\nimport Demo from \"./components/Demo\";\nimport Footer from \"./components/Footer\"; */\nimport \"./App.css\";\nimport React, { Component, useState } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Pixelart from \"./components/Pixelart\";\nimport \"./App.css\";\nimport Animations from \"./components/Animations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      storageValue: 0,\n      web3: null,\n      accounts: null,\n      contract: null,\n      value: \"adsd\",\n      image: \"\"\n    };\n\n    this.componentDidMount = async () => {\n      console.log(this.ref);\n\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = SimpleStorageContract.networks[networkId];\n        const instance = new web3.eth.Contract(SimpleStorageContract.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          accounts,\n          contract: instance\n        }, this.runExample);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.handleClick = async () => {\n      const {\n        accounts,\n        contract,\n        value\n      } = this.state;\n      await contract.methods.setString(value).send({\n        from: accounts[0]\n      });\n      const myValueFromContract = await contract.methods.getString().call();\n      this.setState({\n        value: myValueFromContract\n      });\n    };\n\n    this.runExample = async () => {\n      const {\n        accounts,\n        contract\n      } = this.state;\n      const doubleOutput = await contract.methods.doubleOutput().call();\n      this.setState({\n        storageValue: doubleOutput[0],\n        value: doubleOutput[1]\n      });\n    };\n\n    this.ref = /*#__PURE__*/React.createRef();\n  }\n\n  handleChange(e) {\n    console.log('handle change called');\n    this.setState({\n      value: e\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Pixelart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Animations, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;\n/* function App() {\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n        <div className=\"container\">\n          <Intro />\n          <hr />\n          <Setup />\n          <hr />\n          <Demo />\n          <hr />\n          <Footer />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App; */","map":{"version":3,"names":["React","Component","useState","SimpleStorageContract","getWeb3","Pixelart","Animations","App","constructor","props","state","storageValue","web3","accounts","contract","value","image","componentDidMount","console","log","ref","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","runExample","error","alert","handleClick","methods","setString","send","from","myValueFromContract","getString","call","doubleOutput","createRef","handleChange","e","render"],"sources":["/home/bruh/Desktop/solidity_projects/crypto_pixel_art_creator/client/src/App.jsx"],"sourcesContent":["/* import { EthProvider } from \"./contexts/EthContext\";\nimport Intro from \"./components/Intro/\";\nimport Setup from \"./components/Setup\";\nimport Demo from \"./components/Demo\";\nimport Footer from \"./components/Footer\"; */\nimport \"./App.css\";\nimport React, { Component, useState } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport Pixelart from \"./components/Pixelart\";\nimport \"./App.css\";\n\nimport Animations from \"./components/Animations\"\n\nclass App extends Component{\n  \n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  state = { storageValue: 0, web3: null, accounts: null, contract: null, value: \"adsd\", image: \"\" };\n  componentDidMount = async () => {\n    console.log(this.ref);\n\n    \n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n\n  }\n\n  handleChange(e) {\n    console.log('handle change called')\n    this.setState({ value: e });\n\n  }\n\n\n  handleClick = async () => {\n    const { accounts, contract, value } = this.state;\n    await contract.methods.setString(value).send({ from: accounts[0] });\n    const myValueFromContract = await contract.methods.getString().call();\n    this.setState({ value: myValueFromContract })\n  }\n\n\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n    const doubleOutput = await contract.methods.doubleOutput().call();\n    this.setState({ storageValue: doubleOutput[0], value: doubleOutput[1] });\n  };\n\n  render(){\n    return <>\n    <div>\n\n    \n    <Pixelart></Pixelart>\n\n    <Animations></Animations>\n    \n    </div>\n\n\n    </>\n  }\n\n\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* function App() {\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n        <div className=\"container\">\n          <Intro />\n          <hr />\n          <Setup />\n          <hr />\n          <Demo />\n          <hr />\n          <Footer />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App; */\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}