{"ast":null,"code":"var _jsxFileName = \"/home/brate/Desktop/pixelart_creator/pixelartur/client/src/components/TorusTunnel2.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TorusTunnel2 extends Component {\n  componentDidMount() {\n    // Resize your browser & tunnel keeps form\n    var container = document.querySelector('#torusDiv2');\n    var renderer = new THREE.WebGLRenderer({\n      canvas: document.querySelector('#torusCanvas'),\n      antialias: true\n    });\n    var camera = new THREE.PerspectiveCamera(80, window.innerWidth / window.innerHeight, 0.1, 10000);\n    var scene = new THREE.Scene();\n    var mouseX = 0,\n        mouseY = 0; // Uncomment code below for tunnel steering!\n    // You will fly through the walls like in Mario Kart, haha.\n\n    var windowHalfX = window.innerWidth / 2;\n    var windowHalfY = window.innerHeight / 2;\n    document.addEventListener('mousemove', onDocumentMouseMove, false);\n    renderer.setClearColor(new THREE.Color(\"#1c1624\"));\n    const material = new THREE.PointsMaterial({\n      size: 0.05,\n      color: 0x44aa88 // remove it if you want white points.\n\n    });\n    const geometry = new THREE.BufferGeometry();\n\n    const getRandomParticelPos = particleCount => {\n      const arr = new Float32Array(particleCount * 3);\n\n      for (let i = 0; i < particleCount; i++) {\n        arr[i] = (Math.random() - 0.5) * 10;\n      }\n\n      return arr;\n    };\n\n    scene.add(camera); //scene.background = new THREE.Color( 0xff0000 );\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.append(renderer.domElement); // \n\n    window.addEventListener('resize', onWindowResize, false); /////////////////////////////////////////\n    // Console\n\n    /* var Controls = function() {\n      this.speed = 2;\n      this.rotation = 0;\n    };\n    \n    var text = new Controls(),\n        gui = new dat.GUI();\n        gui.add(text, 'speed', 0, 10);\n        gui.add(text, 'rotation',0,15); */\n    /////////////////////////////////////////\n    // Normalmaterial\n\n    var normalMaterial = new THREE.MeshNormalMaterial({}); // Torus\n\n    function Torus(f) {\n      this.b = new THREE.Mesh(new THREE.TorusGeometry(160, 75, 2, 13), normalMaterial);\n      this.b.position.x = 57 * Math.cos(f);\n      this.b.position.y = 57 * Math.sin(f);\n      this.b.position.z = f * 1.25;\n      this.b.rotation.z = f * 0.03;\n    }\n\n    var numTorus = 80;\n    var tabTorus = [];\n\n    for (var i = 0; i < numTorus; i++) {\n      tabTorus.push(new Torus(-i * 13));\n      scene.add(tabTorus[i].b);\n    } // Update\n\n\n    function update() {\n      for (var i = 0; i < numTorus; i++) {\n        tabTorus[i].b.position.z += 2;\n        tabTorus[i].b.rotation.z += i * 2 / 10000;\n\n        if (tabTorus[i].b.position.z > 0) {\n          tabTorus[i].b.position.z = -1000;\n        }\n      }\n    }\n\n    function onWindowResize() {\n      windowHalfX = window.innerWidth / 2;\n      windowHalfY = window.innerHeight / 2;\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    function onDocumentMouseMove(event) {\n      mouseX = event.clientX - windowHalfX;\n      mouseY = event.clientY - windowHalfY;\n    } // Render\n\n\n    function render() {\n      requestAnimationFrame(render);\n      camera.position.x += (mouseX - camera.position.x) * .05;\n      camera.position.y += (-mouseY - camera.position.y) * .05;\n      renderer.render(scene, camera);\n      update();\n    }\n\n    render();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"torusDiv2\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        style: {\n          background: \"red\"\n        },\n        id: \"torusCanvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default TorusTunnel2;","map":{"version":3,"names":["React","Component","THREE","TorusTunnel2","componentDidMount","container","document","querySelector","renderer","WebGLRenderer","canvas","antialias","camera","PerspectiveCamera","window","innerWidth","innerHeight","scene","Scene","mouseX","mouseY","windowHalfX","windowHalfY","addEventListener","onDocumentMouseMove","setClearColor","Color","material","PointsMaterial","size","color","geometry","BufferGeometry","getRandomParticelPos","particleCount","arr","Float32Array","i","Math","random","add","setSize","append","domElement","onWindowResize","normalMaterial","MeshNormalMaterial","Torus","f","b","Mesh","TorusGeometry","position","x","cos","y","sin","z","rotation","numTorus","tabTorus","push","update","aspect","updateProjectionMatrix","event","clientX","clientY","render","requestAnimationFrame","background"],"sources":["/home/brate/Desktop/pixelart_creator/pixelartur/client/src/components/TorusTunnel2.js"],"sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\n\n\nclass TorusTunnel2 extends Component {\n\n\n\n\n    componentDidMount(){\n        // Resize your browser & tunnel keeps form\nvar container = document.querySelector('#torusDiv2');\nvar renderer = new THREE.WebGLRenderer({canvas: document.querySelector('#torusCanvas'), antialias: true});\nvar camera = new THREE.PerspectiveCamera(80,window.innerWidth/window.innerHeight,0.1,10000);\nvar scene = new THREE.Scene();\nvar mouseX = 0, mouseY = 0;\n// Uncomment code below for tunnel steering!\n// You will fly through the walls like in Mario Kart, haha.\n var windowHalfX = window.innerWidth / 2;\n var windowHalfY = window.innerHeight / 2;\n document.addEventListener( 'mousemove', onDocumentMouseMove, false );\n renderer.setClearColor(new THREE.Color(\"#1c1624\"));\n\n const material = new THREE.PointsMaterial({\n  size: 0.05,\n  color: 0x44aa88 // remove it if you want white points.\n});\nconst geometry = new THREE.BufferGeometry();\n\nconst getRandomParticelPos = (particleCount) => {\n  const arr = new Float32Array(particleCount * 3);\n  for (let i = 0; i < particleCount; i++) {\n    arr[i] = (Math.random() - 0.5) * 10;\n  }\n  return arr;\n};\n\nscene.add(camera);\n//scene.background = new THREE.Color( 0xff0000 );\n\nrenderer.setSize(window.innerWidth, window.innerHeight);\ncontainer.append(renderer.domElement);\n\n// \nwindow.addEventListener( 'resize', onWindowResize, false );\n/////////////////////////////////////////\n\n// Console\n/* var Controls = function() {\n  this.speed = 2;\n  this.rotation = 0;\n};\n\nvar text = new Controls(),\n    gui = new dat.GUI();\n    gui.add(text, 'speed', 0, 10);\n    gui.add(text, 'rotation',0,15); */\n\n/////////////////////////////////////////\n\n\n// Normalmaterial\nvar normalMaterial = new THREE.MeshNormalMaterial({});\n\n\n// Torus\nfunction Torus(f){\n  this.b = new THREE.Mesh(new THREE.TorusGeometry( 160, 75, 2, 13),normalMaterial);\n  this.b.position.x = 57*Math.cos(f);\n  this.b.position.y = 57*Math.sin(f);\n  this.b.position.z = f*1.25;\n  this.b.rotation.z = f*0.03;\n}\n\t\t\nvar numTorus = 80;\nvar tabTorus = [];\nfor(var i=0; i<numTorus; i++){\n  tabTorus.push(new Torus(-i*13));\n  scene.add(tabTorus[i].b);\n}\t\n\n\n// Update\nfunction update(){\n  for(var i=0; i<numTorus; i++){\n    tabTorus[i].b.position.z+=2;\n    tabTorus[i].b.rotation.z+=i*2/10000;\n    if(tabTorus[i].b.position.z>0)\n    {\n      tabTorus[i].b.position.z=-1000;\n    }\n  }\n}\n\nfunction onWindowResize() {\n\n    windowHalfX = window.innerWidth / 2;\n    windowHalfY = window.innerHeight / 2;\n\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize( window.innerWidth, window.innerHeight );\n}\n\nfunction onDocumentMouseMove(event) {\n    mouseX = ( event.clientX - windowHalfX );\n    mouseY = ( event.clientY - windowHalfY );\n}\n\n\n\n// Render\nfunction render() {\n  requestAnimationFrame( render);\n\n  camera.position.x += ( mouseX - camera.position.x ) * .05;\n  camera.position.y += ( - mouseY - camera.position.y ) * .05;\n\n  renderer.render(scene, camera);\n  update();\n}\n\nrender();\n\n    }\n\n    render() {\n        return (\n    \n          <div id='torusDiv2'>\n        \n            <canvas style = {{background:\"red\"}} id=\"torusCanvas\"></canvas>\n          </div>\n    \n        );\n      }\n\n}\n\nexport default TorusTunnel2;"],"mappings":"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"},"metadata":{},"sourceType":"module"}