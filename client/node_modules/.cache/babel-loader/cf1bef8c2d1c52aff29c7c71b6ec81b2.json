{"ast":null,"code":"var _jsxFileName = \"/home/brate/Desktop/pixelart_creator/react_web3_pixelart_creator/client/src/components/Pixelart.js\";\nimport React, { Component, useState } from 'react';\nimport \"./Pixelart.css\";\nimport html2canvas from \"html2canvas\"; //import { color } from 'html2canvas/dist/types/css/types/color';\n//import { color } from 'html2canvas/dist/types/css/types/color';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Pixelart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.appendScreenshot = () => {\n      const container = document.querySelector(\"#container\");\n      html2canvas(container).then(canvas => {\n        const url = canvas.toDataURL(); //png file\n\n        console.log(url); //  base64 \n      });\n    };\n\n    this.updateDimensions = () => {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      console.log(this.state.width);\n    };\n\n    this.state = {\n      colorPicker: \"#ffffff\",\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n  componentDidMount() {\n    let draw = false;\n    let container = document.querySelector('.container');\n    let sizeEl = document.querySelector(\".size\");\n    let size = sizeEl.value;\n    const color = document.querySelector('.color');\n    let resetBtn = document.querySelector('.btn');\n    let eraserBtn = document.querySelector('.eraserBtn');\n    this.setState({\n      colorPicker: color.value,\n      width: window.innerWidth,\n      height: window.innerHeight\n    }, () => {\n      function populate(size) {\n        container.style.setProperty('--size', size);\n        /*  container.style.setProperty(\"--gridsizeH\",\"400px\")\n         container.style.setProperty(\"--gridsizeW\",\"400px\") */\n\n        for (let i = 0; i < size * size; i++) {\n          let div = document.createElement('div');\n          div.classList.add('pixel');\n          let colorPicker = getComputedStyle(div).getPropertyValue('--main-bg-color');\n          div.addEventListener('mouseover', function () {\n            div.style.setProperty(\"--main-bg-color\", color.value);\n            if (!draw) return;\n            div.style.backgroundColor = color.value;\n            div.style.setProperty(\"--main-bg-color\", color.value);\n            div.style.setProperty(\"--pixel-bg-color\", color.value);\n          });\n          div.addEventListener('mouseover', function () {\n            if (getComputedStyle(div).getPropertyValue('--pixel-bg-color') != getComputedStyle(div).getPropertyValue('--main-bg-color')) return;\n            div.style.backgroundColor = colorPicker;\n          });\n          div.addEventListener('mousedown', function () {\n            div.style.backgroundColor = color.value;\n            div.style.setProperty(\"--main-bg-color\", color.value);\n          });\n          /*   document.querySelector('.container').setProperty(\"--gridsizeH\",this.state.height)\n            document.querySelector('.container').setProperty(\"--gridsizeW\",this.state.width) */\n\n          /*    this.setState({width: window.innerWidth, height: window.innerHeight}, () => {\n               console.log(\"hi\")\n             }) */\n\n          container.appendChild(div);\n        }\n      }\n\n      window.addEventListener('resize', onWindowResize, false);\n\n      function onWindowResize() {\n        console.log(\"resize fired in pixelart\");\n        console.log(this.state.width);\n\n        if (this.state.width < 400) {\n          container.style.setProperty(\"--gridsizeH\", \"400px\");\n          container.style.setProperty(\"--gridsizeW\", \"400px\");\n        }\n\n        updateDim();\n      }\n\n      window.addEventListener(\"mousedown\", function () {\n        draw = true;\n      });\n      window.addEventListener(\"mouseup\", function () {\n        draw = false;\n      });\n\n      function updateDim() {\n        this.setState({\n          width: window.innerWidth,\n          height: window.innerHeight\n        });\n      }\n\n      function reset() {\n        container.innerHTML = '';\n        populate(size);\n      }\n\n      function setColorWhite() {\n        color.value = \"#ffffff\";\n      }\n\n      resetBtn.addEventListener('click', reset);\n      eraserBtn.addEventListener('click', setColorWhite);\n      populate(size);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Appi\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"eraserBtn\",\n          children: \"Eraser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          valueDefault: \"#00eeff\",\n          id: \"color\",\n          class: \"color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: \"64\",\n          class: \"size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        id: \"container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.appendScreenshot,\n        children: \"Load Canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default Pixelart;","map":{"version":3,"names":["React","Component","useState","html2canvas","Pixelart","constructor","props","appendScreenshot","container","document","querySelector","then","canvas","url","toDataURL","console","log","updateDimensions","setState","width","window","innerWidth","height","innerHeight","state","colorPicker","componentDidMount","draw","sizeEl","size","value","color","resetBtn","eraserBtn","populate","style","setProperty","i","div","createElement","classList","add","getComputedStyle","getPropertyValue","addEventListener","backgroundColor","appendChild","onWindowResize","updateDim","reset","innerHTML","setColorWhite","render"],"sources":["/home/brate/Desktop/pixelart_creator/react_web3_pixelart_creator/client/src/components/Pixelart.js"],"sourcesContent":["import React, { Component, useState } from 'react'\nimport \"./Pixelart.css\"\nimport html2canvas from \"html2canvas\"\n//import { color } from 'html2canvas/dist/types/css/types/color';\n//import { color } from 'html2canvas/dist/types/css/types/color';\n\nclass Pixelart extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      colorPicker: \"#ffffff\",\n      width: window.innerWidth, \n      height: window.innerHeight\n    };\n   \n  }\n  componentDidMount() {\n\n\n\n    let draw = false\n    let container = document.querySelector('.container')\n    let sizeEl = document.querySelector(\".size\");\n    let size = sizeEl.value\n    const color = document.querySelector('.color')\n    let resetBtn = document.querySelector('.btn')\n    let eraserBtn = document.querySelector('.eraserBtn')\n\n\n    this.setState({ colorPicker: color.value, width: window.innerWidth, height: window.innerHeight}, () => {\n\n  \n\n      function populate(size) {\n\n        container.style.setProperty('--size', size)\n\n\n\n       /*  container.style.setProperty(\"--gridsizeH\",\"400px\")\n        container.style.setProperty(\"--gridsizeW\",\"400px\") */\n\n        for (let i = 0; i < size * size; i++) {\n          let div = document.createElement('div')\n          div.classList.add('pixel')\n\n          let colorPicker = getComputedStyle(div)\n            .getPropertyValue('--main-bg-color');\n\n          div.addEventListener('mouseover', function () {\n            div.style.setProperty(\"--main-bg-color\", color.value);\n\n\n            if (!draw) return\n            div.style.backgroundColor = color.value\n            div.style.setProperty(\"--main-bg-color\", color.value);\n            div.style.setProperty(\"--pixel-bg-color\", color.value);\n\n\n          })\n\n          div.addEventListener('mouseover', function () {\n\n            if (getComputedStyle(div)\n              .getPropertyValue('--pixel-bg-color') != getComputedStyle(div)\n                .getPropertyValue('--main-bg-color')) return\n            div.style.backgroundColor = colorPicker;\n          })\n\n          div.addEventListener('mousedown', function () {\n            div.style.backgroundColor = color.value\n            div.style.setProperty(\"--main-bg-color\", color.value);\n\n          })\n        /*   document.querySelector('.container').setProperty(\"--gridsizeH\",this.state.height)\n          document.querySelector('.container').setProperty(\"--gridsizeW\",this.state.width) */\n\n       /*    this.setState({width: window.innerWidth, height: window.innerHeight}, () => {\n            console.log(\"hi\")\n          }) */\n         \n          container.appendChild(div)\n        }\n      }\n\n      window.addEventListener('resize', onWindowResize, false)\n      function onWindowResize() {\n  \n          console.log(\"resize fired in pixelart\")\n\n          console.log(this.state.width)\n          if(this.state.width<400){\n            container.style.setProperty(\"--gridsizeH\",\"400px\")\n            container.style.setProperty(\"--gridsizeW\",\"400px\")\n          }\n           \n          updateDim();\n      }\n\n\n\n      window.addEventListener(\"mousedown\", function () {\n        draw = true\n      })\n      window.addEventListener(\"mouseup\", function () {\n        draw = false\n      })\n\n      function updateDim(){\n        this.setState({ width: window.innerWidth, height: window.innerHeight});\n      }\n\n      function reset() {\n        container.innerHTML = ''\n        populate(size)\n      }\n\n      function setColorWhite() {\n        color.value = \"#ffffff\"\n      }\n\n      resetBtn.addEventListener('click', reset)\n      eraserBtn.addEventListener('click', setColorWhite)\n\n      populate(size);\n\n    });\n  }\n\n  appendScreenshot = () => {\n\n    const container = document.querySelector(\"#container\");\n\n    html2canvas(container).then((canvas) => {\n      const url = canvas.toDataURL(); //png file\n\n      console.log(url) //  base64 \n\n      \n    });\n  }\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight});\n    console.log(this.state.width)\n  \n};\n\n  render() {\n    return <div className=\"Appi\">\n\n      <div className=\"navbar\">\n        <button className=\"btn\">Reset</button>\n        <button className=\"eraserBtn\">Eraser</button>\n        <input type=\"color\" valueDefault=\"#00eeff\" id=\"color\" class=\"color\"></input>\n        <input type=\"number\" value=\"64\" class=\"size\"></input>\n     </div>\n\n      <div className=\"container\" id=\"container\"></div>\n\n      <button onClick={this.appendScreenshot}>Load Canvas</button>\n\n     {/*   <div className=\"container2\" id=\"container2\"></div> */}\n\n\n    </div>;\n\n  }\n}\n\nexport default Pixelart;"],"mappings":"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"},"metadata":{},"sourceType":"module"}