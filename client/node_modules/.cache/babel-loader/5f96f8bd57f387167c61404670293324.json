{"ast":null,"code":"var _jsxFileName = \"/home/bruh/Desktop/solidity_projects/crypto_pixel_art_creator/client/src/App.jsx\";\n\n/* import { EthProvider } from \"./contexts/EthContext\";\nimport Intro from \"./components/Intro/\";\nimport Setup from \"./components/Setup\";\nimport Demo from \"./components/Demo\";\nimport Footer from \"./components/Footer\"; */\nimport \"./App.css\";\nimport React, { Component, useState } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Pixelart from \"./components/Pixelart\";\nimport \"./App.css\";\nimport Animations from \"./components/Animations\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = /*#__PURE__*/React.createRef();\n  }\n  /*   state = { storageValue: 0, web3: null, accounts: null, contract: null, value: \"adsd\", image: \"\" };\n    componentDidMount = async () => {\n      console.log(this.ref);\n  \n      \n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n  \n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n  \n  \n        // Get the contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = SimpleStorageContract.networks[networkId];\n        const instance = new web3.eth.Contract(\n          SimpleStorageContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n  \n  \n        console.error(error);\n      }\n  \n    }\n  \n    handleChange(e) {\n      console.log('handle change called')\n      this.setState({ value: e });\n  \n  ontract, value } = this.state;\n      await contract.methods.setString(value).send({ from: accounts[0] });\n      const myValueFromContract = await contract.methods.getString().call();\n      this.setState({ value: myValueFromContract })\n    }\n  \n  \n  \n    runExample = async () => {\n      const { accounts, contract } = this.state;\n      const doubleOutput = await contract.methods.doubleOutput().call();\n      this.setState({ storageValue: doubleOutput[0], value: doubleOutput[1] });\n    };\n   */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Pixelart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Animations, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;\n/* function App() {\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n        <div className=\"container\">\n          <Intro />\n          <hr />\n          <Setup />\n          <hr />\n          <Demo />\n          <hr />\n          <Footer />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App; */","map":{"version":3,"names":["React","Component","useState","SimpleStorageContract","getWeb3","Pixelart","Animations","App","constructor","props","ref","createRef","render"],"sources":["/home/bruh/Desktop/solidity_projects/crypto_pixel_art_creator/client/src/App.jsx"],"sourcesContent":["/* import { EthProvider } from \"./contexts/EthContext\";\nimport Intro from \"./components/Intro/\";\nimport Setup from \"./components/Setup\";\nimport Demo from \"./components/Demo\";\nimport Footer from \"./components/Footer\"; */\nimport \"./App.css\";\nimport React, { Component, useState } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport Pixelart from \"./components/Pixelart\";\nimport \"./App.css\";\n\nimport Animations from \"./components/Animations\"\n\nclass App extends Component{\n  \n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  \n\n/*   state = { storageValue: 0, web3: null, accounts: null, contract: null, value: \"adsd\", image: \"\" };\n  componentDidMount = async () => {\n    console.log(this.ref);\n\n    \n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n\n      console.error(error);\n    }\n\n  }\n\n  handleChange(e) {\n    console.log('handle change called')\n    this.setState({ value: e });\n\nontract, value } = this.state;\n    await contract.methods.setString(value).send({ from: accounts[0] });\n    const myValueFromContract = await contract.methods.getString().call();\n    this.setState({ value: myValueFromContract })\n  }\n\n\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n    const doubleOutput = await contract.methods.doubleOutput().call();\n    this.setState({ storageValue: doubleOutput[0], value: doubleOutput[1] });\n  };\n */\n  render(){\n    return <>\n    <div>\n\n    \n    <Pixelart></Pixelart>\n\n    <Animations></Animations>\n    \n    </div>\n\n\n    </>\n  }\n\n\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* function App() {\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n        <div className=\"container\">\n          <Intro />\n          <hr />\n          <Setup />\n          <hr />\n          <Demo />\n          <hr />\n          <Footer />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App; */\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA2B;EAEzBO,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,GAAL,gBAAWV,KAAK,CAACW,SAAN,EAAX;EACD;EAIH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACEC,MAAM,GAAE;IACN,oBAAO;MAAA,uBACP;QAAA,wBAGA,QAAC,QAAD;UAAA;UAAA;UAAA;QAAA,QAHA,eAKA,QAAC,UAAD;UAAA;UAAA;UAAA;QAAA,QALA;MAAA;QAAA;QAAA;QAAA;MAAA;IADO,iBAAP;EAYD;;AAnEwB;;AAuE3B,eAAeL,GAAf;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}