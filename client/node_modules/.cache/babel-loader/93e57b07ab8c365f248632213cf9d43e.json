{"ast":null,"code":"/* import { EthProvider } from \"./contexts/EthContext\";\nimport Intro from \"./components/Intro/\";\nimport Setup from \"./components/Setup\";\nimport Demo from \"./components/Demo\";\nimport Footer from \"./components/Footer\"; */\nimport \"./App.css\";\nimport React, { Component, useState } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\n/* import * as THREE from \"three\"; */\n\nimport animations from \"./components/animations\";\nimport html2canvas from \"html2canvas\";\nimport \"./App.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      storageValue: 0,\n      web3: null,\n      accounts: null,\n      contract: null,\n      value: \"adsd\",\n      image: \"\"\n    };\n\n    this.componentDidMount = async () => {\n      console.log(this.ref);\n\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = SimpleStorageContract.networks[networkId];\n        const instance = new web3.eth.Contract(SimpleStorageContract.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          accounts,\n          contract: instance\n        }, this.runExample);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n        console.error(error);\n      }\n    };\n\n    this.ref = /*#__PURE__*/React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default App;\n/* function App() {\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n        <div className=\"container\">\n          <Intro />\n          <hr />\n          <Setup />\n          <hr />\n          <Demo />\n          <hr />\n          <Footer />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App; */","map":{"version":3,"names":["React","Component","useState","SimpleStorageContract","getWeb3","animations","html2canvas","App","constructor","props","state","storageValue","web3","accounts","contract","value","image","componentDidMount","console","log","ref","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","setState","runExample","error","alert","createRef","render"],"sources":["/home/bruh/Desktop/solidity_projects/crypto_pixel_art_creator/client/src/App.jsx"],"sourcesContent":["/* import { EthProvider } from \"./contexts/EthContext\";\nimport Intro from \"./components/Intro/\";\nimport Setup from \"./components/Setup\";\nimport Demo from \"./components/Demo\";\nimport Footer from \"./components/Footer\"; */\nimport \"./App.css\";\nimport React, { Component, useState } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./getWeb3\";\n/* import * as THREE from \"three\"; */\n\nimport animations from \"./components/animations\"\nimport html2canvas from \"html2canvas\"\nimport \"./App.css\";\n\nclass App extends Component{\n  \n  constructor(props) {\n    super(props)\n    this.ref = React.createRef()\n  }\n\n  state = { storageValue: 0, web3: null, accounts: null, contract: null, value: \"adsd\", image: \"\" };\n  componentDidMount = async () => {\n    console.log(this.ref);\n\n\n\n\n\n\n\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n\n  }\n\n  render(){\n    return <></>\n  }\n\n\n}\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* function App() {\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n        <div className=\"container\">\n          <Intro />\n          <hr />\n          <Setup />\n          <hr />\n          <Demo />\n          <hr />\n          <Footer />\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App; */\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,qBAAP,MAAkC,gCAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA;;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAO,WAAP;;;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA2B;EAEzBO,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IADiB,KAKnBC,KALmB,GAKX;MAAEC,YAAY,EAAE,CAAhB;MAAmBC,IAAI,EAAE,IAAzB;MAA+BC,QAAQ,EAAE,IAAzC;MAA+CC,QAAQ,EAAE,IAAzD;MAA+DC,KAAK,EAAE,MAAtE;MAA8EC,KAAK,EAAE;IAArF,CALW;;IAAA,KAMnBC,iBANmB,GAMC,YAAY;MAC9BC,OAAO,CAACC,GAAR,CAAY,KAAKC,GAAjB;;MAQA,IAAI;QACF;QACA,MAAMR,IAAI,GAAG,MAAMR,OAAO,EAA1B,CAFE,CAIF;;QACA,MAAMS,QAAQ,GAAG,MAAMD,IAAI,CAACS,GAAL,CAASC,WAAT,EAAvB,CALE,CAQF;;QACA,MAAMC,SAAS,GAAG,MAAMX,IAAI,CAACS,GAAL,CAASG,GAAT,CAAaC,KAAb,EAAxB;QACA,MAAMC,eAAe,GAAGvB,qBAAqB,CAACwB,QAAtB,CAA+BJ,SAA/B,CAAxB;QACA,MAAMK,QAAQ,GAAG,IAAIhB,IAAI,CAACS,GAAL,CAASQ,QAAb,CACf1B,qBAAqB,CAAC2B,GADP,EAEfJ,eAAe,IAAIA,eAAe,CAACK,OAFpB,CAAjB,CAXE,CAgBF;QACA;;QACA,KAAKC,QAAL,CAAc;UAAEpB,IAAF;UAAQC,QAAR;UAAkBC,QAAQ,EAAEc;QAA5B,CAAd,EAAsD,KAAKK,UAA3D;MACD,CAnBD,CAmBE,OAAOC,KAAP,EAAc;QACd;QACAC,KAAK,CACF,wEADE,CAAL;QAGAjB,OAAO,CAACgB,KAAR,CAAcA,KAAd;MACD;IAEF,CA1CkB;;IAEjB,KAAKd,GAAL,gBAAWpB,KAAK,CAACoC,SAAN,EAAX;EACD;;EAyCDC,MAAM,GAAE;IACN,oBAAO,qCAAP;EACD;;AAhDwB;;AAoD3B,eAAe9B,GAAf;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}