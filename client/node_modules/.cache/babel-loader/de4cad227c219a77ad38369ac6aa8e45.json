{"ast":null,"code":"var _jsxFileName = \"/home/bruh/Desktop/solidity_projects/crypto_pixel_art_creator/client/src/components/startpage/Home.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport table from '../../assets/models/android.glb';\nimport react from '../../assets/models/react.glb';\nimport pixel3Dobj1 from '../../assets/models/scene (1).glb';\nimport pixel3Dobj2 from '../../assets/models/scene (2).glb';\nimport pixel3Dobj3 from '../../assets/models/scene (3).glb';\nimport pixel3Dobj4 from '../../assets/models/scene (4).glb';\nimport pixel3Dobj5 from '../../assets/models/scene (5).glb';\nimport pixel3Dobj6 from '../../assets/models/scene (6).glb';\nimport pixel3Dobj7 from '../../assets/models/scene (7).glb';\nimport pixel3Dobj8 from '../../assets/models/scene (8).glb';\nimport pixel3Dobj9 from '../../assets/models/scene (9).glb';\nimport pixel3Dobj10 from '../../assets/models/scene (10).glb';\nimport pixel3Dobj11 from '../../assets/models/scene (11).glb';\nimport computer from '../../assets/models/computer.glb';\nimport earthTexture from '../../assets/pictures/landingpage/01-3.jpg';\nimport earthBump from '../../assets/pictures/landingpage/earthbump1k.jpg';\nimport earthSpec from '../../assets/pictures/landingpage/earthspec1k.jpg';\nimport cloudMapTrans from '../../assets/pictures/landingpage/earthcloudmaptrans.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n\n    this.updateDimensions = () => {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n  }\n\n  componentDidMount() {\n    var test;\n    var rotateObj2;\n    var rotateObj3;\n    var rotateObj4;\n    var rotateObj5;\n    var rotateObj6;\n    var camera, scene, renderer;\n    var mesh;\n    var cloudy;\n    var controls; //main planet sizes\n\n    let r = 1.5;\n    let d = 15;\n    let e = 15;\n    init();\n    animate();\n\n    function init() {\n      //erzeugen eines 3js objektes\n      renderer = new THREE.WebGLRenderer({\n        canvas: document.querySelector(\"#earth\"),\n        antialias: true,\n        alpha: true\n      });\n      renderer.shadowMap.enabled = true;\n      renderer.shadowMap.type = THREE.PCFShadowMap;\n      renderer.setPixelRatio(window.devicePixelRatio);\n      const canvasContainer = document.querySelector('#divEarth');\n      renderer.setSize(canvasContainer.offsetWidth, canvasContainer.offsetHeight);\n      let aspect = canvasContainer.offsetWidth / canvasContainer.offsetHeight;\n      camera = new THREE.PerspectiveCamera(45, aspect, 0.1, 1500);\n      camera.position.z = -105;\n      scene = new THREE.Scene();\n      controls = new OrbitControls(camera, document.querySelector(\"#earth\"));\n      controls.target.set(0, 0, 0);\n      controls.enableDamping = false;\n      controls.enableRotate = true;\n      controls.enableZoom = false;\n      controls.update();\n      const loader = new THREE.TextureLoader();\n      loader.setCrossOrigin(\"true\"); //-----------------PLAIN EARTH-------------------------\n\n      /*  const texture = loader.load( 'https://drive.google.com/uc?export=download&id=16a758OvTovkIz_bilprEDxqj3EAPKoDL' );\n       const earthBumpMap = loader.load( 'https://drive.google.com/uc?export=download&id=/14MqoHVKDhKpKkS1porPq8vxdk9853ZXz');\n       const earthSpecMap = loader.load( 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/141228/earthspec1k.jpg'); */\n\n      const texture = loader.load(earthTexture); //wird geladen von privatem google drive account\n\n      const earthBumpMap = loader.load(earthBump);\n      const earthSpecMap = loader.load(earthSpec);\n      var geometry = new THREE.SphereGeometry(r, d, e);\n      var material = new THREE.MeshPhongMaterial({\n        map: texture,\n        bumpMap: earthBumpMap,\n        specularMap: earthSpecMap,\n        bumpScale: 1,\n        shininess: 1\n      });\n      mesh = new THREE.Mesh(geometry, material);\n      mesh.rotation.x += 0.5;\n      mesh.receiveShadow = true;\n      mesh.castShadow = true;\n      mesh.layers.set(0); //------------------------ATMOSPHERE------------------------------------\n      //custom shader material \n\n      const atmosphericGlow = new THREE.Mesh(new THREE.SphereGeometry(r, d, e), new THREE.ShaderMaterial({\n        vertexShader: `\n              varying vec3 vertexNormal;\n              void main()\n              {\n                  vertexNormal = normalize(normalMatrix * normal);\n                  gl_Position = projectionMatrix*modelViewMatrix * vec4(position, 1.0);\n    \n              }`,\n        fragmentShader: `\n              varying vec3 vertexNormal;\n              void main()\n              {\n                  float intensity = pow(0.7 - dot(vertexNormal, vec3(0,0,1.0)), 2.0);\n    \n                  gl_FragColor = vec4(0.0, 0.58, 0.86, 1.0) * intensity;\n              }`,\n        blending: THREE.AdditiveBlending,\n        side: THREE.BackSide\n      }) //custom shader material\n      );\n      atmosphericGlow.scale.set(1.1, 1.1, 1.1); //----------------------CLOUDS----------------------------------------\n\n      var cloudGeometry = new THREE.SphereGeometry(1.45, d, e);\n      const texture2 = new THREE.TextureLoader().load(cloudMapTrans); //Cloud Geomtry and Material\n\n      var cloudMaterial = new THREE.MeshBasicMaterial({\n        map: texture2,\n        transparent: true,\n        opacity: 0.3\n      });\n      cloudy = new THREE.Mesh(cloudGeometry, cloudMaterial);\n      cloudy.rotation.x -= 0.003;\n      cloudGeometry.scale(1.1, 1.1, 1.1); //-------------------------------Orbiting test2 -----------------------------------------------\n\n      const GLTFloader = new GLTFLoader();\n      let obj = null;\n      GLTFloader.setCrossOrigin(\"true\");\n      /*         GLTFloader.load('https://drive.google.com/uc?export=download&id=12e-cf_WGrESVDpmKqp8AVwT8Aa0QucWD', function(glb) {\n                  obj = glb.scene;\n                  console.log(glb.scene);\n                  glb.scene.scale.set(0.5,0.5,0.5);\n                  glb.scene.position.y = 50;\n                  glb.scene.rotation.x -= 0.2;\n                  glb.scene.rotation.y -= 0.5;\n                  scene.add(glb.scene);\n              }); */\n      // --------------------------orbiting table--------------------------------------------------------------\n      // modelle koennen alternativ von einem google drive account geladen werden\n      // GLTFloader.load('https://drive.google.com/uc?export=download&id=1_DDFce6V9xlJ8kJo_eRAZdURPYKGf8wC', function(glb) {\n\n      test = new THREE.Mesh(cloudGeometry, cloudMaterial);\n      GLTFloader.load(pixel3Dobj1, function (glb) {\n        //smiley\n        test = glb.scene;\n        glb.scene.scale.set(0.1, 0.1, 0.1);\n        glb.scene.position.x = -3;\n        glb.scene.rotation.x -= 0.5;\n        scene.add(glb.scene);\n        var orbitingObjPivot2 = new THREE.Object3D();\n        mesh.add(orbitingObjPivot2);\n        orbitingObjPivot2.add(glb.scene);\n      }); //-------------------------------orbiting pc -----------------------------------------------------\n      //https://drive.google.com/file/d/1niNm5TpcuMHVWnvmTMTUlhZLvw95UCEi/view?usp=sharing\n      // GLTFloader.load('https://drive.google.com/uc?export=download&id=1niNm5TpcuMHVWnvmTMTUlhZLvw95UCEi', function(glb) {\n\n      rotateObj2 = new THREE.Mesh();\n      GLTFloader.load(pixel3Dobj3, function (glb) {\n        rotateObj2 = glb.scene;\n        glb.scene.scale.set(0.0001, 0.0001, 0.0001);\n        glb.scene.position.x = 3;\n        glb.scene.rotation.x -= 0.5;\n        scene.add(glb.scene);\n        var orbitingObjPivot3 = new THREE.Object3D();\n        mesh.add(orbitingObjPivot3);\n        orbitingObjPivot3.add(glb.scene);\n      }); //python\n\n      rotateObj3 = new THREE.Mesh();\n      GLTFloader.load(pixel3Dobj5, function (glb) {\n        //violet man\n        rotateObj3 = glb.scene;\n        glb.scene.scale.set(0.04, 0.04, 0.04);\n        glb.scene.position.z = -2;\n        glb.scene.position.x = 0;\n        glb.scene.position.y = 2;\n        glb.scene.rotation.x -= 0.5;\n        scene.add(glb.scene);\n        var orbitingObjPivot4 = new THREE.Object3D();\n        mesh.add(orbitingObjPivot4);\n        orbitingObjPivot4.add(glb.scene);\n      }); // react\n\n      rotateObj4 = new THREE.Mesh();\n      /*             GLTFloader.load(pixel3Dobj4, function (glb) {\n      \n                      rotateObj4 = glb.scene;\n                      glb.scene.scale.set(0.05, 0.05, 0.05)\n                      glb.scene.position.z = +2\n                      glb.scene.position.x = 0;\n                      glb.scene.position.y = -2;\n                      glb.scene.rotation.x -= 0.5;\n                      scene.add(glb.scene);\n                      var orbitingObjPivot5 = new THREE.Object3D();\n                      mesh.add(orbitingObjPivot5);\n                      orbitingObjPivot5.add(glb.scene);\n                  }); */\n\n      rotateObj5 = new THREE.Mesh();\n      /*             GLTFloader.load(pixel3Dobj9, function (glb) {\n      \n                      rotateObj5 = glb.scene;\n                      glb.scene.scale.set(0.005, 0.005, 0.005)\n                      glb.scene.position.z = 2;\n                      glb.scene.position.x = 2;\n                      glb.scene.position.y = -2;\n                      glb.scene.rotation.x -= 0.5;\n                      scene.add(glb.scene);\n                      var orbitingObjPivot6 = new THREE.Object3D();\n                      mesh.add(orbitingObjPivot6);\n                      orbitingObjPivot6.add(glb.scene);\n                  }); */\n\n      rotateObj6 = new THREE.Mesh();\n      /* \n                  GLTFloader.load(pixel3Dobj10, function (glb) {\n      \n                      rotateObj6 = glb.scene;\n                      //glb.scene.scale.set(0.005, 0.005, 0.005)\n                      glb.scene.position.z = 2;\n                      glb.scene.position.x = -2;\n                      glb.scene.position.y = -2;\n                      glb.scene.rotation.x -= 0.5;\n                      scene.add(glb.scene);\n                      var orbitingObjPivot7 = new THREE.Object3D();\n                      mesh.add(orbitingObjPivot7);\n                      orbitingObjPivot7.add(glb.scene);\n                  }); */\n      //-----------------------------PLANET------------------------------\n\n      let planet = new THREE.Object3D();\n      planet.add(mesh);\n      planet.add(atmosphericGlow);\n      planet.add(cloudy); // planet.position.z = -20;\n\n      planet.position.z = -94;\n      scene.add(planet); // camera.lookAt(planet);\n\n      controls.target = planet.position;\n      /* \n                  const tween1 = new TWEEN.Tween({ x: 0, y: 0, z: 200 }).to({\n                      x: -\n                          0, y: 0, z: -94\n                  }, 2000).onUpdate(function (object) {\n                      planet.position.set(object.x, object.y, object.z);\n                  })\n      \n      \n                  tween1.start();\n       */\n\n      var light = new THREE.DirectionalLight(0xffffff, 2);\n      light.position.set(0, 1, -250).normalize();\n      light.castShadow = true;\n      scene.add(light);\n    }\n\n    function resize() {\n      var width = renderer.domElement.clientWidth;\n      var height = renderer.domElement.clientHeight;\n      renderer.setSize(width, height, false);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n    }\n\n    function animate() {\n      resize();\n      controls.update();\n      /* TWEEN.update(); */\n      // obj.rotation.x += 0.005;\n\n      test.rotation.y += 0.01;\n      test.rotation.x += 0.01;\n      rotateObj2.rotation.y += 0.01;\n      rotateObj2.rotation.x += 0.01;\n      rotateObj3.rotation.y += 0.01;\n      rotateObj3.rotation.x += 0.01;\n      rotateObj4.rotation.y += 0.01;\n      rotateObj4.rotation.x += 0.01;\n      rotateObj5.rotation.y += 0.01;\n      rotateObj5.rotation.x += 0.01;\n      rotateObj6.rotation.y += 0.01;\n      rotateObj6.rotation.x += 0.01;\n      mesh.rotation.y += 0.005;\n      cloudy.rotation.y -= 0.003;\n      renderer.render(scene, camera);\n      renderer.clearDepth();\n      camera.layers.set(0);\n      requestAnimationFrame(animate);\n    }\n\n    window.addEventListener('resize', this.updateDimensions);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mainDiv\",\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#101522'\n        /*                     height: '800hv'\n         */\n\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }, this), this.state.width > 1200 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"divEarth\",\n        style: {\n          display: 'flex',\n          justifyContent: 'right',\n          alignItems: 'right',\n          height: '100vh',\n          width: '100vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          id: \"earth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"divEarth\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'right',\n            alignItems: 'right',\n            height: '350px',\n            width: '320px'\n          },\n          id: \"earth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"names":["React","Component","THREE","OrbitControls","GLTFLoader","table","react","pixel3Dobj1","pixel3Dobj2","pixel3Dobj3","pixel3Dobj4","pixel3Dobj5","pixel3Dobj6","pixel3Dobj7","pixel3Dobj8","pixel3Dobj9","pixel3Dobj10","pixel3Dobj11","computer","earthTexture","earthBump","earthSpec","cloudMapTrans","Home","state","width","window","innerWidth","height","innerHeight","updateDimensions","setState","componentDidMount","test","rotateObj2","rotateObj3","rotateObj4","rotateObj5","rotateObj6","camera","scene","renderer","mesh","cloudy","controls","r","d","e","init","animate","WebGLRenderer","canvas","document","querySelector","antialias","alpha","shadowMap","enabled","type","PCFShadowMap","setPixelRatio","devicePixelRatio","canvasContainer","setSize","offsetWidth","offsetHeight","aspect","PerspectiveCamera","position","z","Scene","target","set","enableDamping","enableRotate","enableZoom","update","loader","TextureLoader","setCrossOrigin","texture","load","earthBumpMap","earthSpecMap","geometry","SphereGeometry","material","MeshPhongMaterial","map","bumpMap","specularMap","bumpScale","shininess","Mesh","rotation","x","receiveShadow","castShadow","layers","atmosphericGlow","ShaderMaterial","vertexShader","fragmentShader","blending","AdditiveBlending","side","BackSide","scale","cloudGeometry","texture2","cloudMaterial","MeshBasicMaterial","transparent","opacity","GLTFloader","obj","glb","add","orbitingObjPivot2","Object3D","orbitingObjPivot3","y","orbitingObjPivot4","planet","light","DirectionalLight","normalize","resize","domElement","clientWidth","clientHeight","updateProjectionMatrix","render","clearDepth","requestAnimationFrame","addEventListener","display","justifyContent","alignItems","backgroundColor"],"sources":["/home/bruh/Desktop/solidity_projects/crypto_pixel_art_creator/client/src/components/startpage/Home.js"],"sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\n\nimport table from '../../assets/models/android.glb' \nimport react from '../../assets/models/react.glb'\nimport pixel3Dobj1 from '../../assets/models/scene (1).glb'\nimport pixel3Dobj2 from '../../assets/models/scene (2).glb'\nimport pixel3Dobj3 from '../../assets/models/scene (3).glb'\nimport pixel3Dobj4 from '../../assets/models/scene (4).glb'\nimport pixel3Dobj5 from '../../assets/models/scene (5).glb'\nimport pixel3Dobj6 from '../../assets/models/scene (6).glb'\nimport pixel3Dobj7 from '../../assets/models/scene (7).glb'\nimport pixel3Dobj8 from '../../assets/models/scene (8).glb'\nimport pixel3Dobj9 from '../../assets/models/scene (9).glb'\nimport pixel3Dobj10 from '../../assets/models/scene (10).glb'\nimport pixel3Dobj11 from '../../assets/models/scene (11).glb'\n\nimport computer from '../../assets/models/computer.glb'\nimport earthTexture from '../../assets/pictures/landingpage/01-3.jpg'\nimport earthBump from '../../assets/pictures/landingpage/earthbump1k.jpg'\nimport earthSpec from '../../assets/pictures/landingpage/earthspec1k.jpg'\nimport cloudMapTrans from '../../assets/pictures/landingpage/earthcloudmaptrans.jpg'\n\n\n\n\n\nclass Home extends Component {\n\n    state = { width: window.innerWidth, height: window.innerHeight };\n\n\n    componentDidMount() {\n\n\n\n        \n        var test;\n        var rotateObj2;\n        var rotateObj3;\n        var rotateObj4;\n        var rotateObj5;\n\n        var rotateObj6;\n\n        var camera, scene, renderer;\n        var mesh;\n        var cloudy;\n        var controls;\n\n        //main planet sizes\n        let r = 1.5;\n        let d = 15;\n        let e = 15;\n\n        init();\n        animate();\n\n        function init() {\n\n            //erzeugen eines 3js objektes\n            renderer = new THREE.WebGLRenderer({ canvas: document.querySelector(\"#earth\"), antialias: true, alpha: true });\n            renderer.shadowMap.enabled = true;\n            renderer.shadowMap.type = THREE.PCFShadowMap;\n            renderer.setPixelRatio(window.devicePixelRatio);\n            const canvasContainer = document.querySelector('#divEarth');\n            renderer.setSize(canvasContainer.offsetWidth, canvasContainer.offsetHeight);\n\n\n            let aspect = canvasContainer.offsetWidth / canvasContainer.offsetHeight\n            camera = new THREE.PerspectiveCamera(45, aspect, 0.1, 1500);\n            camera.position.z = -105;\n\n            scene = new THREE.Scene();\n\n\n            controls = new OrbitControls(camera, document.querySelector(\"#earth\"));\n            controls.target.set(0, 0, 0);\n            controls.enableDamping = false;\n            controls.enableRotate = true;\n            controls.enableZoom = false;\n            controls.update();\n\n\n            const loader = new THREE.TextureLoader();\n\n            loader.setCrossOrigin(\"true\");\n\n            //-----------------PLAIN EARTH-------------------------\n\n            /*  const texture = loader.load( 'https://drive.google.com/uc?export=download&id=16a758OvTovkIz_bilprEDxqj3EAPKoDL' );\n             const earthBumpMap = loader.load( 'https://drive.google.com/uc?export=download&id=/14MqoHVKDhKpKkS1porPq8vxdk9853ZXz');\n             const earthSpecMap = loader.load( 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/141228/earthspec1k.jpg'); */\n\n\n            const texture = loader.load(earthTexture); //wird geladen von privatem google drive account\n            const earthBumpMap = loader.load(earthBump);\n            const earthSpecMap = loader.load(earthSpec)\n\n\n            var geometry = new THREE.SphereGeometry(r, d, e);\n            var material = new THREE.MeshPhongMaterial({\n\n                map: texture,\n                bumpMap: earthBumpMap,\n                specularMap: earthSpecMap,\n                bumpScale: 1,\n                shininess: 1\n            })\n\n\n            mesh = new THREE.Mesh(geometry, material);\n            mesh.rotation.x += 0.5;\n            mesh.receiveShadow = true;\n            mesh.castShadow = true;\n            mesh.layers.set(0);\n\n\n\n            //------------------------ATMOSPHERE------------------------------------\n\n            //custom shader material \n            const atmosphericGlow = new THREE.Mesh(\n                new THREE.SphereGeometry(r, d, e),\n                new THREE.ShaderMaterial(\n                    {\n                        vertexShader: `\n              varying vec3 vertexNormal;\n              void main()\n              {\n                  vertexNormal = normalize(normalMatrix * normal);\n                  gl_Position = projectionMatrix*modelViewMatrix * vec4(position, 1.0);\n    \n              }`,\n                        fragmentShader: `\n              varying vec3 vertexNormal;\n              void main()\n              {\n                  float intensity = pow(0.7 - dot(vertexNormal, vec3(0,0,1.0)), 2.0);\n    \n                  gl_FragColor = vec4(0.0, 0.58, 0.86, 1.0) * intensity;\n              }`,\n                        blending: THREE.AdditiveBlending,\n                        side: THREE.BackSide\n                    }\n                )\n\n\n\n                //custom shader material\n\n            )\n\n            atmosphericGlow.scale.set(1.1, 1.1, 1.1)\n\n\n            //----------------------CLOUDS----------------------------------------\n            var cloudGeometry = new THREE.SphereGeometry(1.45, d, e);\n            const texture2 = new THREE.TextureLoader().load(cloudMapTrans);\n\n            //Cloud Geomtry and Material\n            var cloudMaterial = new THREE.MeshBasicMaterial({\n                map: texture2,\n                transparent: true,\n                opacity: 0.3\n\n            });\n\n            cloudy = new THREE.Mesh(cloudGeometry, cloudMaterial);\n            cloudy.rotation.x -= 0.003;\n            cloudGeometry.scale(1.1, 1.1, 1.1);\n\n\n\n            //-------------------------------Orbiting test2 -----------------------------------------------\n\n            const GLTFloader = new GLTFLoader();\n            let obj = null;\n\n            GLTFloader.setCrossOrigin(\"true\");\n\n\n\n\n            /*         GLTFloader.load('https://drive.google.com/uc?export=download&id=12e-cf_WGrESVDpmKqp8AVwT8Aa0QucWD', function(glb) {\n                        obj = glb.scene;\n                        console.log(glb.scene);\n                        glb.scene.scale.set(0.5,0.5,0.5);\n                        glb.scene.position.y = 50;\n                        glb.scene.rotation.x -= 0.2;\n                        glb.scene.rotation.y -= 0.5;\n                        scene.add(glb.scene);\n                    }); */\n\n            // --------------------------orbiting table--------------------------------------------------------------\n\n            // modelle koennen alternativ von einem google drive account geladen werden\n\n            // GLTFloader.load('https://drive.google.com/uc?export=download&id=1_DDFce6V9xlJ8kJo_eRAZdURPYKGf8wC', function(glb) {\n            \n            \n                test = new THREE.Mesh(cloudGeometry, cloudMaterial);\n\n            GLTFloader.load(pixel3Dobj1, function (glb) {  //smiley\n\n                test = glb.scene;\n\n                glb.scene.scale.set(0.1, 0.1, 0.1)\n                glb.scene.position.x = -3;\n                glb.scene.rotation.x -= 0.5;\n                scene.add(glb.scene);\n                var orbitingObjPivot2 = new THREE.Object3D();\n                mesh.add(orbitingObjPivot2);\n                orbitingObjPivot2.add(glb.scene);\n            });\n\n            //-------------------------------orbiting pc -----------------------------------------------------\n            //https://drive.google.com/file/d/1niNm5TpcuMHVWnvmTMTUlhZLvw95UCEi/view?usp=sharing\n\n            // GLTFloader.load('https://drive.google.com/uc?export=download&id=1niNm5TpcuMHVWnvmTMTUlhZLvw95UCEi', function(glb) {\n        \n            rotateObj2 = new THREE.Mesh();\n            GLTFloader.load(pixel3Dobj3, function (glb) {\n\n                rotateObj2 = glb.scene;\n                glb.scene.scale.set(0.0001, 0.0001, 0.0001)\n\n                glb.scene.position.x = 3;\n                glb.scene.rotation.x -= 0.5;\n                scene.add(glb.scene);\n                var orbitingObjPivot3 = new THREE.Object3D();\n                mesh.add(orbitingObjPivot3);\n                orbitingObjPivot3.add(glb.scene);\n            });\n\n\n            //python\n            rotateObj3 = new THREE.Mesh();\n\n            GLTFloader.load(pixel3Dobj5, function (glb) {  //violet man\n\n                rotateObj3 = glb.scene;\n                glb.scene.scale.set(0.04, 0.04, 0.04)\n                glb.scene.position.z = -2\n                glb.scene.position.x = 0;\n                glb.scene.position.y = 2;\n                glb.scene.rotation.x -= 0.5;\n                scene.add(glb.scene);\n                var orbitingObjPivot4 = new THREE.Object3D();\n                mesh.add(orbitingObjPivot4);\n                orbitingObjPivot4.add(glb.scene);\n            });\n\n            // react\n            rotateObj4 = new THREE.Mesh();\n\n/*             GLTFloader.load(pixel3Dobj4, function (glb) {\n\n                rotateObj4 = glb.scene;\n                glb.scene.scale.set(0.05, 0.05, 0.05)\n                glb.scene.position.z = +2\n                glb.scene.position.x = 0;\n                glb.scene.position.y = -2;\n                glb.scene.rotation.x -= 0.5;\n                scene.add(glb.scene);\n                var orbitingObjPivot5 = new THREE.Object3D();\n                mesh.add(orbitingObjPivot5);\n                orbitingObjPivot5.add(glb.scene);\n            }); */\n\n            rotateObj5 = new THREE.Mesh();\n\n/*             GLTFloader.load(pixel3Dobj9, function (glb) {\n\n                rotateObj5 = glb.scene;\n                glb.scene.scale.set(0.005, 0.005, 0.005)\n                glb.scene.position.z = 2;\n                glb.scene.position.x = 2;\n                glb.scene.position.y = -2;\n                glb.scene.rotation.x -= 0.5;\n                scene.add(glb.scene);\n                var orbitingObjPivot6 = new THREE.Object3D();\n                mesh.add(orbitingObjPivot6);\n                orbitingObjPivot6.add(glb.scene);\n            }); */\n            rotateObj6 = new THREE.Mesh();\n/* \n            GLTFloader.load(pixel3Dobj10, function (glb) {\n\n                rotateObj6 = glb.scene;\n                //glb.scene.scale.set(0.005, 0.005, 0.005)\n                glb.scene.position.z = 2;\n                glb.scene.position.x = -2;\n                glb.scene.position.y = -2;\n                glb.scene.rotation.x -= 0.5;\n                scene.add(glb.scene);\n                var orbitingObjPivot7 = new THREE.Object3D();\n                mesh.add(orbitingObjPivot7);\n                orbitingObjPivot7.add(glb.scene);\n            }); */\n\n            //-----------------------------PLANET------------------------------\n\n            let planet = new THREE.Object3D();\n\n            planet.add(mesh);\n            planet.add(atmosphericGlow);\n            planet.add(cloudy);\n\n\n\n           // planet.position.z = -20;\n           planet.position.z = -94;\n            scene.add(planet);\n\n           // camera.lookAt(planet);\n\n           controls.target = planet.position;\n/* \n            const tween1 = new TWEEN.Tween({ x: 0, y: 0, z: 200 }).to({\n                x: -\n                    0, y: 0, z: -94\n            }, 2000).onUpdate(function (object) {\n                planet.position.set(object.x, object.y, object.z);\n            })\n\n\n            tween1.start();\n */\n\n\n\n            var light = new THREE.DirectionalLight(0xffffff, 2);\n            light.position.set(0, 1, -250).normalize();\n            light.castShadow = true;\n\n            scene.add(light);\n\n\n           \n\n        }\n\n\n\n\n        function resize() {\n            var width = renderer.domElement.clientWidth;\n            var height = renderer.domElement.clientHeight;\n            renderer.setSize(width, height, false);\n            camera.aspect = width / height;\n            camera.updateProjectionMatrix();\n        }\n\n\n\n        function animate() {\n            resize();\n            controls.update();\n            \n            /* TWEEN.update(); */\n           // obj.rotation.x += 0.005;\n           test.rotation.y += 0.01;\n           test.rotation.x += 0.01;\n\n           rotateObj2.rotation.y += 0.01;\n           rotateObj2.rotation.x += 0.01;\n\n           rotateObj3.rotation.y += 0.01;\n           rotateObj3.rotation.x += 0.01;\n\n           rotateObj4.rotation.y += 0.01;\n           rotateObj4.rotation.x += 0.01;\n\n           rotateObj5.rotation.y += 0.01;\n           rotateObj5.rotation.x += 0.01;\n\n           rotateObj6.rotation.y += 0.01;\n           rotateObj6.rotation.x += 0.01;\n\n            mesh.rotation.y += 0.005;\n            cloudy.rotation.y -= 0.003;\n            renderer.render(scene, camera);\n            renderer.clearDepth();\n            camera.layers.set(0);\n            requestAnimationFrame(animate);\n        }\n\n\n\n        window.addEventListener('resize', this.updateDimensions);\n\n\n    }\n    updateDimensions = () => {\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\n    };\n\n\n    render() {\n        return (\n            <div id='mainDiv'\n\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    backgroundColor:'#101522'\n/*                     height: '800hv'\n */                }}>\n\n\n\n\n\n\n\n                <div>\n\n\n\n\n    {/*                 <p style={{ color: 'green' }}>Window size: {this.state.width} x {this.state.height} </p>\n                    <p style={{ color: 'red' }}>\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n\n                    </p>\n                    <p style={{ color: 'red' }}>sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n                    <p style={{ color: 'red' }}> Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. </p>\n                    <p style={{ color: 'red' }}>Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>\n\n                    <p style={{ color: 'red' }}> Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</p>\n\n */}\n\n\n\n\n\n                </div>\n\n\n\n\n\n\n\n\n                {this.state.width > 1200 ? (<div id='divEarth'\n\n                    style={{\n                        display: 'flex',\n                        justifyContent: 'right',\n                        alignItems: 'right',\n\n                        height: '100vh',\n                        width: '100vh'\n\n                    }}\n                >\n\n\n                    <canvas id='earth'></canvas>\n                </div>) : (\n\n                    <div id='divEarth'\n\n\n                    >\n\n\n                        <canvas \n                    style={{\n                        display: 'flex',\n                        justifyContent: 'right',\n                        alignItems: 'right',\n\n                        height: '350px',\n                        width: '320px'\n\n                    }} id='earth'></canvas>\n                    </div>\n                )}\n\n\n\n\n\n\n                <div>\n\n                </div>\n\n            </div>\n\n\n        );\n    }\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module"}