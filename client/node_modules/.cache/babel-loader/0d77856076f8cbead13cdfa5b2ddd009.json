{"ast":null,"code":"var _jsxFileName = \"/home/brate/Desktop/pixelart_creator/pixelartur/client/src/components/PixelartFunc.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport useWindowDimensions from './WindowDimHook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PixelartFunc() {\n  _s();\n\n  const [draw, setDraw] = useState(false);\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const [colorPicker, setColorPicker] = useState(\"#ffffff\"); // Similar to componentDidMount and componentDidUpdate:\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"width: \", width, \" ~ height: \", height]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this)\n  /*         <div className=\"Appi\">\n  \n              <div className=\"navbar\"\n                  style={{\n                      backgroundColor: \"#101522\"\n                  }}\n              >\n  \n                  <button id=\"btn\" class=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-4 px-10 border border-blue-500 hover:border-transparent rounded\"><p style={{ fontWeight: 'bold', fontSize: '200%' }}>Reset</p></button>\n                  <div style={{\n                      width: '30px'\n                  }}></div>\n                  <button id=\"eraserBtn\" class=\"bg-transparent hover:bg-red-500 text-blue-700 font-semibold hover:text-white py-4 px-10 border border-blue-500 hover:border-transparent rounded\"><p style={{ fontWeight: 'bold', fontSize: '200%' }}>Eraser</p></button>\n  \n                  <input type=\"color\" valueDefault=\"#00eeff\" id=\"color\" class=\"color\"></input>\n              </div>\n  \n  \n              <p>{this.state.width < 800 ? (\n  \n  \n                  <div style={{ height: myWidth, width: myWidth }} className=\"container\" id=\"container\"></div>\n  \n  PixelartFunc\n              ) : <div style={{ height: \"800px\", width: \"800px\" }} className=\"container\" id=\"container\"></div>}</p>\n  \n  \n  \n              <button onClick={this.appendScreenshot}>Load Canvas</button>\n  \n  \n  \n  \n          </div> */\n  ;\n}\n\n_s(PixelartFunc, \"IFENGIpSZIwyKtABTpTd8y/R8SE=\", false, function () {\n  return [useWindowDimensions];\n});\n\n_c = PixelartFunc;\nexport default PixelartFunc;\n\nvar _c;\n\n$RefreshReg$(_c, \"PixelartFunc\");","map":{"version":3,"names":["React","useState","useEffect","useWindowDimensions","PixelartFunc","draw","setDraw","height","width","colorPicker","setColorPicker","document","title","count"],"sources":["/home/brate/Desktop/pixelart_creator/pixelartur/client/src/components/PixelartFunc.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport useWindowDimensions from './WindowDimHook';\nfunction PixelartFunc() {\n    const [draw, setDraw] = useState(false);\n\n    const { height, width } = useWindowDimensions();\n\n    const [colorPicker, setColorPicker]  = useState(\"#ffffff\")\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => {\n        // Update the document title using the browser API\n        document.title = `You clicked ${count} times`;\n    });\n\n    return (\n        <div>\n        width: {width} ~ height: {height}\n      </div>\n/*         <div className=\"Appi\">\n\n            <div className=\"navbar\"\n                style={{\n                    backgroundColor: \"#101522\"\n                }}\n            >\n\n                <button id=\"btn\" class=\"bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-4 px-10 border border-blue-500 hover:border-transparent rounded\"><p style={{ fontWeight: 'bold', fontSize: '200%' }}>Reset</p></button>\n                <div style={{\n                    width: '30px'\n                }}></div>\n                <button id=\"eraserBtn\" class=\"bg-transparent hover:bg-red-500 text-blue-700 font-semibold hover:text-white py-4 px-10 border border-blue-500 hover:border-transparent rounded\"><p style={{ fontWeight: 'bold', fontSize: '200%' }}>Eraser</p></button>\n\n                <input type=\"color\" valueDefault=\"#00eeff\" id=\"color\" class=\"color\"></input>\n            </div>\n\n\n            <p>{this.state.width < 800 ? (\n\n\n                <div style={{ height: myWidth, width: myWidth }} className=\"container\" id=\"container\"></div>\n\nPixelartFunc\n            ) : <div style={{ height: \"800px\", width: \"800px\" }} className=\"container\" id=\"container\"></div>}</p>\n\n\n\n            <button onClick={this.appendScreenshot}>Load Canvas</button>\n\n\n\n\n        </div> */\n    );\n}\n\nexport default PixelartFunc;\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,iBAAhC;;;AACA,SAASC,YAAT,GAAwB;EAAA;;EACpB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;EAEA,MAAM;IAAEM,MAAF;IAAUC;EAAV,IAAoBL,mBAAmB,EAA7C;EAEA,MAAM,CAACM,WAAD,EAAcC,cAAd,IAAiCT,QAAQ,CAAC,SAAD,CAA/C,CALoB,CAMpB;;EACAC,SAAS,CAAC,MAAM;IACZ;IACAS,QAAQ,CAACC,KAAT,GAAkB,eAAcC,KAAM,QAAtC;EACH,CAHQ,CAAT;EAKA,oBACI;IAAA,sBACQL,KADR,iBAC0BD,MAD1B;EAAA;IAAA;IAAA;IAAA;EAAA;EAGR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EArCI;AAuCH;;GAnDQH,Y;UAGqBD,mB;;;KAHrBC,Y;AAqDT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}